create table public.attendance (
  id serial not null,
  teacher_id integer not null,
  date date not null,
  class character varying(50) not null,
  boys_count integer null default 0,
  girls_count integer null default 0,
  created_at timestamp without time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp without time zone null default CURRENT_TIMESTAMP,
  constraint attendance_pkey primary key (id),
  constraint attendance_id_key unique (id),
  constraint fk_teacher foreign KEY (teacher_id) references users (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.class_promotions (
  id serial not null,
  student_id integer not null,
  from_class character varying(10) not null,
  to_class character varying(10) not null,
  academic_year integer not null,
  promotion_date timestamp without time zone null default now(),
  constraint class_promotions_pkey primary key (id),
  constraint class_promotions_student_id_fkey foreign KEY (student_id) references students (id)
) TABLESPACE pg_default;

create table public.marks (
  id serial not null,
  student_id integer not null,
  subject_id integer not null,
  term_id integer not null,
  marks numeric(5, 2) not null,
  teacher_id integer not null,
  entry_date timestamp without time zone null default now(),
  status character varying(20) null default 'active'::character varying,
  created_at timestamp without time zone null default now(),
  updated_at timestamp without time zone null default now(),
  entered_by integer null,
  constraint marks_pkey primary key (id),
  constraint marks_student_id_subject_id_term_id_key unique (student_id, subject_id, term_id),
  constraint marks_student_id_fkey foreign KEY (student_id) references students (id),
  constraint marks_entered_by_fkey foreign KEY (entered_by) references users (id),
  constraint marks_teacher_id_fkey foreign KEY (teacher_id) references users (id),
  constraint marks_subject_id_fkey foreign KEY (subject_id) references subjects (id),
  constraint marks_marks_check check (
    (
      (marks >= (0)::numeric)
      and (marks <= (100)::numeric)
    )
  )
) TABLESPACE pg_default;

create table public.saved_reports (
  id serial not null,
  term_id integer not null,
  class_name character varying(255) null,
  academic_year integer not null,
  ranking_method character varying(50) not null,
  generated_at timestamp without time zone not null default CURRENT_TIMESTAMP,
  report_data jsonb not null,
  created_by integer not null,
  created_at timestamp without time zone not null default CURRENT_TIMESTAMP,
  constraint saved_reports_pkey primary key (id),
  constraint saved_reports_created_by_fkey foreign KEY (created_by) references users (id),
  constraint saved_reports_term_id_fkey foreign KEY (term_id) references terms (id)
) TABLESPACE pg_default;

create index IF not exists idx_saved_reports_created_by on public.saved_reports using btree (created_by) TABLESPACE pg_default;

create index IF not exists idx_saved_reports_academic_year on public.saved_reports using btree (academic_year) TABLESPACE pg_default;

create table public.student_subjects (
  id serial not null,
  index_number character varying(50) not null,
  subject_id integer not null,
  academic_year integer not null,
  assigned_date timestamp without time zone null default now(),
  created_at timestamp without time zone null default now(),
  updated_at timestamp without time zone null default now(),
  constraint student_subjects_pkey primary key (id),
  constraint student_subjects_index_number_subject_id_academic_year_key unique (index_number, subject_id, academic_year),
  constraint student_subjects_index_number_fkey foreign KEY (index_number) references students (index_number),
  constraint student_subjects_subject_id_fkey foreign KEY (subject_id) references subjects (id)
) TABLESPACE pg_default;

create index IF not exists idx_student_subjects_index_number on public.student_subjects using btree (index_number) TABLESPACE pg_default;

create index IF not exists idx_student_subjects_subject_id on public.student_subjects using btree (subject_id) TABLESPACE pg_default;

create index IF not exists idx_student_subjects_academic_year on public.student_subjects using btree (academic_year) TABLESPACE pg_default;

create trigger update_student_subjects_updated_at BEFORE
update on student_subjects for EACH row
execute FUNCTION update_updated_at_column ();

create table public.student_term_attendance (
  id bigserial not null,
  student_id integer not null,
  term_id integer not null,
  academic_year character varying(10) not null,
  total_school_days integer not null,
  attended_days integer not null,
  absent_days integer not null,
  attendance_percentage numeric(5, 2) not null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint student_term_attendance_pkey primary key (id),
  constraint student_term_attendance_unique unique (student_id, term_id, academic_year),
  constraint student_term_attendance_student_id_fkey foreign KEY (student_id) references students (id) on delete CASCADE,
  constraint student_term_attendance_term_id_fkey foreign KEY (term_id) references terms (id) on delete CASCADE,
  constraint student_term_attendance_attended_days_check check ((attended_days >= 0)),
  constraint attendance_days_check check ((attended_days <= total_school_days)),
  constraint student_term_attendance_total_school_days_check check ((total_school_days > 0)),
  constraint student_term_attendance_absent_days_check check ((absent_days >= 0)),
  constraint absent_days_check check (
    (absent_days = (total_school_days - attended_days))
  ),
  constraint student_term_attendance_attendance_percentage_check check (
    (
      (attendance_percentage >= (0)::numeric)
      and (attendance_percentage <= (100)::numeric)
    )
  )
) TABLESPACE pg_default;

create index IF not exists idx_student_term_attendance_student_id on public.student_term_attendance using btree (student_id) TABLESPACE pg_default;

create index IF not exists idx_student_term_attendance_term_id on public.student_term_attendance using btree (term_id) TABLESPACE pg_default;

create index IF not exists idx_student_term_attendance_academic_year on public.student_term_attendance using btree (academic_year) TABLESPACE pg_default;

create table public.students (
  id serial not null,
  index_number character varying(50) not null,
  name character varying(255) not null,
  address text null,
  mother_name character varying(255) null,
  father_name character varying(255) null,
  guardian_name character varying(255) null,
  mother_phone character varying(20) null,
  father_phone character varying(20) null,
  guardian_phone character varying(20) null,
  current_class character varying(10) not null,
  admission_year integer not null,
  status character varying(20) null default 'active'::character varying,
  created_at timestamp without time zone null default now(),
  updated_at timestamp without time zone null default now(),
  name_with_initials character varying(255) null,
  constraint students_pkey primary key (id),
  constraint students_index_number_key unique (index_number),
  constraint unique_index_number unique (index_number)
) TABLESPACE pg_default;

create table public.subjects (
  id serial not null,
  subject_code character varying(20) not null,
  subject_name character varying(255) not null,
  stream character varying(50) not null,
  description text null,
  status character varying(20) null default 'active'::character varying,
  created_at timestamp without time zone null default now(),
  updated_at timestamp without time zone null default now(),
  constraint subjects_pkey primary key (id),
  constraint subjects_subject_code_key unique (subject_code)
) TABLESPACE pg_default;

create table public.subjects (
  id serial not null,
  subject_code character varying(20) not null,
  subject_name character varying(255) not null,
  stream character varying(50) not null,
  description text null,
  status character varying(20) null default 'active'::character varying,
  created_at timestamp without time zone null default now(),
  updated_at timestamp without time zone null default now(),
  constraint subjects_pkey primary key (id),
  constraint subjects_subject_code_key unique (subject_code)
) TABLESPACE pg_default;
